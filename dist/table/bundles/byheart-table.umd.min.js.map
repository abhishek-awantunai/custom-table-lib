{"version":3,"sources":["../../../projects/table/src/lib/table.service.ts","../../../projects/table/src/lib/table.component.html","../../../projects/table/src/lib/table.component.ts","../../../projects/table/src/lib/components/mobile/mobile.component.ts","../../../projects/table/src/lib/components/ladder/ladder.component.ts","../../../projects/table/src/lib/table.module.ts"],"names":["TableService","_httpClient","this","prototype","getTableList","url","get","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵtemplate","i0.ɵɵlistener","i0.ɵɵstyleProp","i0.ɵɵclassProp","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","TableComponent","_tableService","activatedRoute","currentPage","showPagination","page","ngOnInit","_this","idx","pathFromRoot","length","console","log","sharedData","sub","data","subscribe","subData","config","getTableData","ngOnDestroy","unsubscribe","ngOnChanges","changes","createPagination","limit","tableDataCopy","startIndex","endIndex","tableData","slice","paginationCount","Math","floor","paginationArray","Array","fill","updatePage","res","tableHeaders","Object","keys","ɵɵdirectiveInject","i2","ActivatedRoute","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","MobileComponent","LadderComponent","route","path","component","ByeartTableModule","providers","imports","HttpClientModule","CommonModule","RouterModule","forChild","declarations","exports"],"mappings":"4fAOE,SAAAA,EAAoBC,GAAAC,KAAAD,YAAAA,SAEpBD,EAAAG,UAAAC,aAAA,SAAaC,GACX,OAAOH,KAAKD,YAAYK,IAAID,EAAM,4CCF1BE,EAAAA,eAAAA,EAAAA,KAAAA,GACEC,EAAAA,OAAAA,GACFC,EAAAA,2DAFwCC,EAAAA,WAAAA,UAAAA,MAAAA,EAAAA,QAAAA,MAAAA,EAAAA,OAAAA,YAAAA,KAAAA,EAAAA,OAAAA,YAAAA,OACtCC,EAAAA,UAAAA,GAAAC,EAAAA,mBAAAA,IAAAA,EAAAA,+BAMFL,EAAAA,eAAAA,EAAAA,MACEC,EAAAA,OAAAA,GACFC,EAAAA,qEADEE,EAAAA,UAAAA,GAAAC,EAAAA,mBAAAA,IAAAA,EAAAA,GAAAA,+BAFJL,EAAAA,eAAAA,EAAAA,MACEM,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAAA,GAGFJ,EAAAA,6CAHME,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,kEAcAH,EAAAA,eAAAA,EAAAA,KAAAA,IAE4CO,EAAAA,WAAAA,SAAAA,WAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,gBAAAA,MAAAA,OAAAA,EAAAA,cAAAA,GAAAA,WAAAA,EAAsB,MAChEN,EAAAA,OAAAA,GACFC,EAAAA,4FAHEM,EAAAA,YAAAA,aAAAA,EAAAA,MAAAA,EAAAA,QAAAA,MAAAA,EAAAA,OAAAA,aAAAA,MAAAA,EAAAA,OAAAA,YAAAA,MAAAA,KAAAA,EAAAA,OAAAA,YAAAA,MAAAA,WAAAA,IADEC,EAAAA,YAAAA,SAAAA,GAGFL,EAAAA,UAAAA,GAAAC,EAAAA,mBAAAA,IAAAA,EAAAA,EAAAA,+BAJJK,EAAAA,wBAAAA,GACEJ,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAAA,IAKFK,EAAAA,iEAHIP,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,KAAAA,GAAAA,EAAAA,EAAAA,KAAAA,uDATVH,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAAA,IACEA,EAAAA,eAAAA,EAAAA,MACEA,EAAAA,eAAAA,EAAAA,KAAAA,IAAgCO,EAAAA,WAAAA,SAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,cAAAA,GAAAA,WAAoB,WAClDN,EAAAA,OAAAA,EAAAA,mBACFC,EAAAA,eACAI,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,eAAAA,GAOAN,EAAAA,eAAAA,EAAAA,KAAAA,IAA0DO,EAAAA,WAAAA,SAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,cAAAA,GAAAA,WAAoB,WAC5EN,EAAAA,OAAAA,EAAAA,eACFC,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eAEFA,EAAAA,gDAhBUE,EAAAA,UAAAA,GAAAK,EAAAA,YAAAA,WAAAA,EAAAA,KAAAA,GAGUL,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,iBAOVC,EAAAA,UAAAA,GAAAK,EAAAA,YAAAA,WAAAA,EAAAA,QAAAA,MAAAA,EAAAA,gBAAAA,KAAAA,EAAAA,gBAAAA,mCAdZC,EAAAA,wBAAAA,GACEJ,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,MAAAA,GAoBFK,EAAAA,sDApB0BP,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,OAAAA,EAAAA,kDDhBnBV,GAAYmB,EAAAC,SAAAC,EAAAC,kDAAZtB,EAAYuB,QAAZvB,EAAYwB,KAAAC,WAFX,0BEeZ,SAAAC,EACUC,EACAC,GADA1B,KAAAyB,cAAAA,EACAzB,KAAA0B,eAAAA,EAqBV1B,KAAA2B,YAAsB,EAEtB3B,KAAA4B,gBAA0B,EAC1B5B,KAAA6B,KAAe,SArBfL,EAAAvB,UAAA6B,SAAA,WAAA,IAAAC,EAAA/B,KACMgC,EAAMhC,KAAK0B,eAAeO,aAAaC,OAAS,EAEpD,IADAC,QAAQC,IAAIJ,GACc,MAAnBhC,KAAKqC,YAAsBL,EAAM,GACtChC,KAAKsC,IAAMtC,KAAK0B,eAAeO,aAAaD,GAAKO,KAAKC,WACpD,SAACC,GACCV,EAAKW,OAASD,EACdV,EAAKY,kBAGTX,KAIJR,EAAAvB,UAAA2C,YAAA,WACE5C,KAAKsC,IAAIO,eAUXrB,EAAAvB,UAAA6C,YAAA,SAAYC,GACVZ,QAAQC,IAAIW,IAGdvB,EAAAvB,UAAA+C,iBAAA,WAGE,GAFAhD,KAAKiD,MAAQjD,KAAK0C,OAAS1C,KAAK0C,OAAoB,YAAS,MAAI,GACjE1C,KAAK4B,eAAiB5B,KAAKkD,cAAchB,OAASlC,KAAKiD,MACnDjD,KAAK4B,eAAgB,CACvB,IAAMuB,GAAcnD,KAAK6B,KAAO,GAAK7B,KAAKiD,MACpCG,EAAWpD,KAAK6B,KAAO7B,KAAKiD,MAClCjD,KAAKqD,UAAYrD,KAAKkD,cAAcI,MAAMH,EAAYC,GACtDpD,KAAKuD,gBAAkBC,KAAKC,MAAMzD,KAAKkD,cAAchB,OAASlC,KAAKiD,OACnEjD,KAAK0D,gBAAkB,IAAIC,MAAM3D,KAAKuD,iBAAiBK,MAAK,GAC5D5D,KAAK0D,gBAAgB1D,KAAK6B,KAAO,IAAK,IAI1CL,EAAAvB,UAAA4D,WAAA,SAAWhC,GACI,SAATA,EACF7B,KAAK6B,MAAQ,EACK,SAATA,EACT7B,KAAK6B,MAAQ,EAEb7B,KAAK6B,KAAOA,EAEdM,QAAQC,IAAIpC,KAAK6B,MACjB7B,KAAKgD,oBAGPxB,EAAAvB,UAAA0C,aAAA,WAAA,IAAAZ,EAAA/B,KACEA,KAAKyB,cAAcvB,aAAaF,KAAK0C,OAAY,KAAGF,WAAU,SAACsB,GAC7D/B,EAAKmB,cAAgBY,EACrB/B,EAAKgC,aAAeC,OAAOC,KAAKlC,EAAKmB,cAAc,IACnDnB,EAAKiB,6DAxEExB,GAAcP,EAAAiD,kBAAApE,GAAAmB,EAAAiD,kBAAAC,EAAAC,mDAAd5C,EAAc6C,UAAA,CAAA,CAAA,qBAAAC,OAAA,CAAA5B,OAAA,UAAA6B,SAAA,CAAAtD,EAAAuD,sBAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,kBAAA,mBAAA,CAAA,EAAA,OAAA,CAAA,EAAA,aAAA,CAAA,EAAA,SAAA,CAAA,EAAA,UAAA,EAAA,QAAA,WAAA,CAAA,EAAA,QAAA,WAAA,CAAA,EAAA,QAAA,CAAA,EAAA,WAAA,CAAA,QAAA,aAAA,EAAA,QAAA,CAAA,EAAA,cAAA,CAAA,EAAA,aAAA,CAAA,EAAA,SAAA,CAAA,EAAA,SAAA,aAAA,QAAA,EAAA,SAAAC,SAAA,SAAAC,EAAAC,SDV3BxE,EAAAA,OAAAA,EAAAA,gCAEAD,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,QAAAA,GACEA,EAAAA,eAAAA,EAAAA,SACEA,EAAAA,eAAAA,EAAAA,MACEM,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAAA,GAGFJ,EAAAA,eACFA,EAAAA,eACAF,EAAAA,eAAAA,EAAAA,SACEM,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAAA,GAKFJ,EAAAA,eACFA,EAAAA,eACAI,EAAAA,WAAAA,GAAAA,EAAAA,EAAAA,EAAAA,eAAAA,GAsBFJ,EAAAA,eACFA,EAAAA,eACFA,EAAAA,sBArCgBE,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,cAMFC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,WAOMC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,QAAAA,MAAAA,EAAAA,UAAAA,KAAAA,EAAAA,UAAAA,QAAAA,63CEdpB,IAAAuE,EAAA,8CAAaA,qCAAAA,EAAeV,UAAA,CAAA,CAAA,kBAAAI,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,SAHdzE,EAAAA,eAAAA,EAAAA,MAAIC,EAAAA,OAAAA,EAAAA,oBAAgBC,EAAAA,mCCGlC,IAAAyE,EAAA,8CAAaA,qCAAAA,EAAeX,UAAA,CAAA,CAAA,kBAAAI,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,SAHdzE,EAAAA,eAAAA,EAAAA,MAAIC,EAAAA,OAAAA,EAAAA,oBAAgBC,EAAAA,mCCKlC,IAAM0E,EAAgB,CACpB,CAAEC,KAAM,GAAIC,UAAW3D,GACvB,CAAE0D,KAAM,SAAUC,UAAWH,GAC7B,CAAEE,KAAM,SAAUC,UAAWJ,MAS/B,6CAAaK,iEAAAA,IAAiBC,UAHjB,CAACvF,GAAawF,QAAA,CADhB,CAACC,EAAAA,iBAAkBC,EAAAA,aAAcC,EAAAA,aAAaC,SAAST,wEAIrDG,EAAiB,CAAAO,aAAA,CALbnE,EAAgBwD,EAAiBD,GAAeO,QAAA,CACrDC,EAAAA,iBAAkBC,EAAAA,aAAYrB,EAAAsB,cAAAG,QAAA,CAE9BpE","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TableService {\n  constructor(private _httpClient: HttpClient) {}\n\n  getTableList(url) {\n    return this._httpClient.get(url + '/comments');\n  }\n}\n","let me check this baba reee\n\n<div class=\"container-fluid table-container\">\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th *ngFor=\"let header of tableHeaders\" [ngStyle]=\"config?.styleConfig?.theme\">\n              {{ header }}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of tableData;\">\n            <td *ngFor=\"let header of tableHeaders\">\n              {{item[header]}}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <ng-container *ngIf=\"tableData?.length > 0\">\n        <div class=\"pagination\" *ngIf=\"showPagination\">\n          <div class=\"container\">\n            <ul>\n              <li [class.disabled]=\"page < 2\" (click)=\"updatePage('prev')\">\n                Previous Page\n              </li>\n              <ng-container *ngFor=\"let pageFlag of paginationArray; let i = index;\">\n                <li [class.active]=\"pageFlag\"\n                  [style.background]=\"pageFlag ? config?.styleConfig?.theme?.background : ''\"\n                  *ngIf=\"i >= (page - 2) && i < (page + 2)\" (click)=\"updatePage(i+1)\">\n                  {{i + 1}}\n                </li>\n              </ng-container>\n              <li [class.disabled]=\"page === (paginationArray?.length)\" (click)=\"updatePage('next')\">\n                Next Page\n              </li>\n            </ul>\n          </div>\n\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { TableService } from './table.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'custom-table-lib',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n})\nexport class TableComponent implements OnInit {\n  @Input('config') config;\n  dataFromRoute;\n  sharedData;\n  tableData;\n  sub: Subscription;\n  tableHeaders;\n  tableDataCopy;\n\n  constructor(\n    private _tableService: TableService,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    let idx = this.activatedRoute.pathFromRoot.length - 2;\n    console.log(idx);\n    while (this.sharedData == null && idx > 0) {\n      this.sub = this.activatedRoute.pathFromRoot[idx].data.subscribe(\n        (subData) => {\n          this.config = subData;\n          this.getTableData();\n        }\n      );\n      idx--;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  currentPage: number = 1;\n  paginationArray: Array<Boolean>;\n  showPagination: Boolean = false;\n  page: number = 1;\n  paginationCount: number;\n  limit: number;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(changes);\n  }\n\n  createPagination() {\n    this.limit = this.config ? this.config['tableConfig']['limit'] : 10;\n    this.showPagination = this.tableDataCopy.length > this.limit;\n    if (this.showPagination) {\n      const startIndex = (this.page - 1) * this.limit;\n      const endIndex = this.page * this.limit;\n      this.tableData = this.tableDataCopy.slice(startIndex, endIndex);\n      this.paginationCount = Math.floor(this.tableDataCopy.length / this.limit);\n      this.paginationArray = new Array(this.paginationCount).fill(false);\n      this.paginationArray[this.page - 1] = true;\n    }\n  }\n\n  updatePage(page) {\n    if (page === 'prev') {\n      this.page -= 1;\n    } else if (page === 'next') {\n      this.page += 1;\n    } else {\n      this.page = page;\n    }\n    console.log(this.page);\n    this.createPagination();\n  }\n\n  getTableData() {\n    this._tableService.getTableList(this.config['api']).subscribe((res) => {\n      this.tableDataCopy = res;\n      this.tableHeaders = Object.keys(this.tableDataCopy[0]);\n      this.createPagination();\n    });\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'custom-mobile',\n  template: ` <h1>Mobile component</h1> `,\n  styles: [],\n})\nexport class MobileComponent {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'custom-ladder',\n  template: ` <h1>Ladder component</h1> `,\n  styles: [],\n})\nexport class LadderComponent {}\n","import { NgModule } from '@angular/core';\nimport { TableComponent } from './table.component';\nimport { TableService } from './table.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MobileComponent } from './components/mobile/mobile.component';\nimport { LadderComponent } from './components/ladder/ladder.component';\n\nconst route: Routes = [\n  { path: '', component: TableComponent },\n  { path: 'ladder', component: LadderComponent },\n  { path: 'mobile', component: MobileComponent },\n];\n\n@NgModule({\n  declarations: [TableComponent, LadderComponent, MobileComponent],\n  imports: [HttpClientModule, CommonModule, RouterModule.forChild(route)],\n  providers: [TableService],\n  exports: [TableComponent],\n})\nexport class ByeartTableModule {}\n"]}